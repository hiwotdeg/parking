version: '3.8'

services:
  service-discovery:
    image: ${HARBOR_URL}/kft-lab/service-discovery:0.0.1-SNAPSHOT-054c502
    container_name: service-discovery
    ports:
      - "8761:8761"
    environment:
      - EUREKA_INSTANCE_HOSTNAME=service-discovery
      - SERVICE_DISCOVERY_SERVER.PORT=8761

  api-gateway:
    image: ${HARBOR_URL}/kft-lab/api-gateway:0.0.1-SNAPSHOT-054c502
    container_name: api-gateway
    depends_on:
      - service-discovery
      - auth-service
      - geo-location-service
      - parking-lot-service
      - notification-service
      - payment-service
    ports:
      - "80:80"
    environment:
      - DISCOVERY_SERVICE_URL=http://service-discovery:8761
      - NOTIFICATION_SERVICE_URL=ws://notification-service:8181
      - EUREKA_DEFAULT_ZONE_URL=http://service-discovery:8761/eureka
      - API_GATEWAY_SERVER_PORT=80

  auth-service:
    image: ${HARBOR_URL}/kft-lab/auth-service:0.0.1-SNAPSHOT-054c502
    container_name: auth-service
    depends_on:
      - service-discovery
      - redis
      - broker
      - zookeeper
      - database
    environment:
      - EUREKA_DEFAULT_ZONE_URL=http://service-discovery:8761/eureka
      - KAFKA_URL=broker:9092
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DB_URL=jdbc:postgresql://database:5432/parking_lot
      - API_GATEWAY_SERVICE_URL=http://api-gateway:80

  geo-location-service:
    image: ${HARBOR_URL}/kft-lab/geo-location-service:0.0.1-SNAPSHOT-054c502
    container_name: geo-location-service
    depends_on:
      - service-discovery
      - redis
      - broker
      - zookeeper
    environment:
      - EUREKA_DEFAULT_ZONE_URL=http://service-discovery:8761/eureka
      - KAFKA_URL=broker:9092
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - API_GATEWAY_SERVICE_URL=http://api-gateway:80

  parking-lot-service:
    image: ${HARBOR_URL}/kft-lab/parking-lot-service:0.0.1-SNAPSHOT-054c502
    container_name: parking-lot-service
    depends_on:
      - service-discovery
      - redis
      - broker
      - zookeeper
      - database
    environment:
      - EUREKA_DEFAULT_ZONE_URL=http://service-discovery:8761/eureka
      - KAFKA_URL=broker:9092
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DB_URL=jdbc:postgresql://database:5432/parking_lot
      - API_GATEWAY_SERVICE_URL=http://api-gateway:80

  notification-service:
    image: ${HARBOR_URL}/kft-lab/notification-service:0.0.1-SNAPSHOT-054c502
    container_name: notification-service
    depends_on:
      - service-discovery
      - redis
      - broker
      - zookeeper
    ports:
      - "8081:8081"
    environment:
      - EUREKA_DEFAULT_ZONE_URL=http://service-discovery:8761/eureka
      - KAFKA_URL=broker:9092
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NOTIFICATION_SERVER_URL=notification-service
      - TELEGRAM_USERNAME=parking_lot_locator_bot
      - TELEGRAM_TOKEN=6478988761:AAHoiepwTE0Bh8JjK_2piQIjDD8wyGl-qN8

  payment-service:
    image: ${HARBOR_URL}/kft-lab/payment-service:0.0.1-SNAPSHOT-054c502
    container_name: payment-service
    depends_on:
      - service-discovery
      - redis
      - broker
      - zookeeper
      - database
    environment:
      - EUREKA_DEFAULT_ZONE_URL=http://service-discovery:8761/eureka
      - KAFKA_URL=broker:9092
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DB_URL=jdbc:postgresql://database:5432/parking_lot
      - API_GATEWAY_SERVICE_URL=http://api-gateway:80

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  zipkin:
    image: ghcr.io/openzipkin/zipkin-slim:${TAG:-latest}
    container_name: zipkin
    environment:
      - STORAGE_TYPE=mem
      # Uncomment to enable self-tracing
      # - SELF_TRACING_ENABLED=true
      # Uncomment to increase heap size
      # - JAVA_OPTS=-Xms128m -Xmx128m -XX:+ExitOnOutOfMemoryError
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - "9411:9411"
    # Uncomment to enable debug logging
    # command: --logging.level.zipkin2=DEBUG

  database:
    container_name: database
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: parking_lot
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"

volumes:
  postgres_data:
